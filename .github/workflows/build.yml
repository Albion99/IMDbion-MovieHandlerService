name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: Restore packages
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore packages
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal

  build-docker:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          file: IMDbion_MovieHandlerService/Dockerfile
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/movieservice:latest

  deploy:
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate kube configuration
        run: |
          mkdir ~/.kube
          touch ~/.kube/config
          echo "${{ secrets.KUBE_CONFIG }}" >> ~/.kube/config

      - name: Create secrets
        run: |
          kubectl delete secret imdbion-movieservice-secrets --ignore-not-found
          kubectl create secret generic imdbion-movieservice-secrets --from-literal=${{ secrets.DATABASE_CONNECTIONSTRING }}

      - name: Deploy application
        run: kubectl apply -f IMDbion_MovieHandlerService/Kubernetes/deployment.yaml

      - name: Restart pod
        run: kubectl rollout restart deploy imdbion-movieservice-deployment